// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                 Int    @id @default(autoincrement())
  name               String
  collection         String
  description        String
  discountPercentage Int
  listPrice          Int
  listPriceCents     Int
  unitsRemaining     Int

  wishlists UserWishlisted[]
  carts     UserCarted[]
  purchases UserPurchased[]

  // wishlistedBy   User? @relation("wishlisted", fields: [wishlistedById], references: [id])
  // wishlistedById Int?
  // cartedBy       User? @relation("carted", fields: [cartedById], references: [id])
  // cartedById     Int?
  // purchasedBy    User? @relation("purchased", fields: [purchasedById], references: [id])
  // purchasedById  Int?
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  username String @unique
  password String

  wishlists UserWishlisted[]
  carts     UserCarted[]
  purchases UserPurchased[]

  // wishlistedProducts Product[] @relation("wishlisted")
  // cartedProducts     Product[] @relation("carted")
  // purchasedProducts  Product[] @relation("purchased")
}

model UserWishlisted {
  id        Int      @id @default(autoincrement())
  User      User    @relation(fields: [userId], references: [id])
  userId    Int
  Product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model UserCarted {
  id        Int      @id @default(autoincrement())
  User      User    @relation(fields: [userId], references: [id])
  userId    Int
  Product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model UserPurchased {
  id        Int      @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}
